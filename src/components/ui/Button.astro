---
import type { HTMLAttributes } from "astro/types";

interface ButtonProps extends HTMLAttributes<"button"> {
  variant?:
    | "default"
    | "destructive"
    | "outline"
    | "secondary"
    | "ghost"
    | "link";
  size?: "default" | "sm" | "lg" | "icon";
  type?: "button" | "submit" | "reset";
  disabled?: boolean;
}

const {
  variant = "default",
  size = "default",
  type = "button",
  disabled = false,
  ...rest
} = Astro.props as ButtonProps;
---

<button
  class={`inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-radius text-sm font-medium transition-colors cursor-pointer focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 
  ${
    {
      default:
        "bg-accent-primary text-primary-foreground shadow hover:bg-accent-primary/80",
      destructive: "bg-danger shadow-sm hover:bg-danger/90",
      outline:
        "border border-border shadow-sm hover:bg-accent hover:bg-background-elevated",
      secondary:
        "bg-background-elevated text-primary-foreground shadow hover:bg-background-elevated/80",
      ghost: "hover:bg-accent hover:bg-background-elevated/80",
      link: "text-primary underline-offset-4 hover:underline",
    }[variant]
  }
  ${
    {
      default: "h-9 px-4 py-2",
      sm: "h-8 px-3 text-xs",
      lg: "h-10 px-8",
      icon: "h-9 w-9",
    }[size]
  }`}
  type={type}
  disabled={disabled}
  {...rest}
>
  <slot />
</button>
