---
import CoreLayout from "@/layouts/CoreLayout.astro";

import type { PaginateFunction } from "astro";

import type { ArticleProps } from "@/lib/types";
import { getCollection } from "astro:content";

import DefaultImage from "@/assets/images/setup.png";
import Pagination from "@/components/article/Pagination.astro";
import ArticleCard from "@/components/article/ArticleCard.astro";

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const posts: ArticleProps[] = await getCollection("article").then(
    (entries: ArticleProps[]) => entries.filter((entry) => !entry.data.draft)
  );

  posts.sort((a: ArticleProps, b: ArticleProps) => {
    const aDate = new Date(a.data.modDatetime ?? a.data.pubDatetime).valueOf();
    const bDate = new Date(b.data.modDatetime ?? b.data.pubDatetime).valueOf();
    return bDate - aDate;
  });

  return paginate(posts, {
    pageSize: 6,
  });
}

const { page } = Astro.props;
---

<CoreLayout>
  <div
    class="flex flex-col gap-4 max-w-3xl justify-center z-10 pb-6 px-4 lg:px-0"
  >
    <div class="my-8">
      <h4 class="text-text-muted font-normal">
        My personal collection of code snippets, starter guides, tutorials and
        interesting things I found online. I hope you find something useful
        here.
      </h4>
    </div>
    <div class="flex flex-col justify-around gap-8">
      {
        page.data.map((post: ArticleProps) => (
          <div class="">
            <ArticleCard post={post} />
          </div>
        ))
      }
    </div>
    <Pagination
      prevUrl={page.url.prev}
      nextUrl={page.url.next}
      first={page.url.first}
      last={page.url.last}
    />
  </div>
</CoreLayout>
